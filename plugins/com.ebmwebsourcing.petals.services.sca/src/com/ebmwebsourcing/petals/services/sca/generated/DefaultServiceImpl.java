package com.ebmwebsourcing.petals.services.sca.generated;

import com.ebmwebsourcing.petals.services.sca.configuration.beans.ScaWizardBean;
import com.ebmwebsourcing.petals.services.sca.configuration.beans.ScaWizardReferenceBean;

/****************************************************************************
 * 
 * Copyright (c) 2008-2011, EBM WebSourcing
 * 
 * This source code is available under agreement available at
 * http://www.petalslink.com/legal/licenses/petals-studio
 * 
 * You should have received a copy of the agreement along with this program.
 * If not, write to EBM WebSourcing (4, rue Amelie - 31200 Toulouse, France).
 * 
 *****************************************************************************/

/**
  * This class was generated by EMF JET. 
  * <b>DO NOT MODIFY IT!</b>
  * @author Adrien LOUIS - EBM WebSourcing 
  */
public class DefaultServiceImpl {

  protected static String nl;
  public static synchronized DefaultServiceImpl create(String lineSeparator)
  {
    nl = lineSeparator;
    DefaultServiceImpl result = new DefaultServiceImpl();
    nl = null;
    return result;
  }

  public final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "package ";
  protected final String TEXT_2 = ";" + NL;
  protected final String TEXT_3 = NL + "import org.osoa.sca.annotations.Reference;";
  protected final String TEXT_4 = NL + "import org.osoa.sca.annotations.Service;";
  protected final String TEXT_5 = NL + "import ";
  protected final String TEXT_6 = ";";
  protected final String TEXT_7 = NL + NL + "@Service(MainService.class)" + NL + "public class MainServiceImpl implements MainService {" + NL + "\t";
  protected final String TEXT_8 = NL + "\t//" + NL + "\t// References";
  protected final String TEXT_9 = NL + "\t";
  protected final String TEXT_10 = NL + "\tprivate ";
  protected final String TEXT_11 = " ";
  protected final String TEXT_12 = ";" + NL + "" + NL + "\t@Reference" + NL + "\tpublic void set";
  protected final String TEXT_13 = "( ";
  protected final String TEXT_14 = " ";
  protected final String TEXT_15 = " ) {" + NL + "\t\tthis.";
  protected final String TEXT_16 = " = ";
  protected final String TEXT_17 = ";" + NL + "\t}" + NL + "\t" + NL + "\t";
  protected final String TEXT_18 = NL + NL + "\t// TODO: define the service implementation." + NL + "}";
  protected final String TEXT_19 = NL;

	 public String generate( Object argument )
  {
    final StringBuffer stringBuffer = new StringBuffer();
     ScaWizardBean bean = (ScaWizardBean) argument; 
    stringBuffer.append(TEXT_1);
    stringBuffer.append( bean.getPackageName() );
    stringBuffer.append(TEXT_2);
    
boolean hasReference = bean.getReferences().size() > 0;
if( hasReference ) {

    stringBuffer.append(TEXT_3);
     } 
    stringBuffer.append(TEXT_4);
     for( ScaWizardReferenceBean ref : bean.getReferences()) { 
    stringBuffer.append(TEXT_5);
    stringBuffer.append( ref.getInterfaceClassName() );
    stringBuffer.append(TEXT_6);
     } 
    stringBuffer.append(TEXT_7);
     if( hasReference ) { 
    stringBuffer.append(TEXT_8);
     } 
    stringBuffer.append(TEXT_9);
     
	for( ScaWizardReferenceBean ref : bean.getReferences()) { 
    stringBuffer.append(TEXT_10);
    stringBuffer.append( ref.getSimpleInterfaceClassName() );
    stringBuffer.append(TEXT_11);
    stringBuffer.append( ref.getReferenceName() );
    stringBuffer.append(TEXT_12);
    stringBuffer.append( ref.getSimpleInterfaceClassName() );
    stringBuffer.append(TEXT_13);
    stringBuffer.append( ref.getSimpleInterfaceClassName() );
    stringBuffer.append(TEXT_14);
    stringBuffer.append( ref.getReferenceName() );
    stringBuffer.append(TEXT_15);
    stringBuffer.append( ref.getReferenceName() );
    stringBuffer.append(TEXT_16);
    stringBuffer.append( ref.getReferenceName() );
    stringBuffer.append(TEXT_17);
     } 
    stringBuffer.append(TEXT_18);
    stringBuffer.append(TEXT_19);
    return stringBuffer.toString();
  }
}