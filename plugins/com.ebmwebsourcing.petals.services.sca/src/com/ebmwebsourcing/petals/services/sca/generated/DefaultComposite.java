package com.ebmwebsourcing.petals.services.sca.generated;

import com.ebmwebsourcing.petals.services.sca.configuration.beans.ScaWizardBean;
import com.ebmwebsourcing.petals.services.sca.configuration.beans.ScaWizardReferenceBean;

/****************************************************************************
 * 
 * Copyright (c) 2008-2011, EBM WebSourcing
 * 
 * This source code is available under agreement available at
 * http://www.petalslink.com/legal/licenses/petals-studio
 * 
 * You should have received a copy of the agreement along with this program.
 * If not, write to EBM WebSourcing (4, rue Amelie - 31200 Toulouse, France).
 * 
 *****************************************************************************/

/**
  * This class was generated by EMF JET. 
  * <b>DO NOT MODIFY IT!</b>
  * @author Adrien LOUIS - EBM WebSourcing 
  */
public class DefaultComposite {

  protected static String nl;
  public static synchronized DefaultComposite create(String lineSeparator)
  {
    nl = lineSeparator;
    DefaultComposite result = new DefaultComposite();
    nl = null;
    return result;
  }

  public final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" + NL + "<sca:composite " + NL + "\txmlns:frascati=\"http://frascati.ow2.org/xmlns/sca/1.1\" " + NL + "\txmlns:sca=\"http://www.osoa.org/xmlns/sca/1.0\" " + NL + "\tname=\"";
  protected final String TEXT_2 = "\" " + NL + "\ttargetNamespace=\"";
  protected final String TEXT_3 = "\">" + NL + "\t" + NL + "\t<!-- The main service -->" + NL + "\t<sca:service name=\"mainService\" promote=\"mainComponent/mainService\"/>" + NL + "\t" + NL + "\t<!-- The main component -->" + NL + "  \t<sca:component name=\"mainComponent\">" + NL + "    \t<sca:implementation.java class=\"";
  protected final String TEXT_4 = ".";
  protected final String TEXT_5 = "\"/>" + NL + "    \t<sca:service name=\"mainService\">" + NL + "      \t\t<sca:interface.java interface=\"";
  protected final String TEXT_6 = ".";
  protected final String TEXT_7 = "\"/>" + NL + "    \t</sca:service>" + NL + "    \t";
  protected final String TEXT_8 = NL + "    \t<sca:reference name=\"";
  protected final String TEXT_9 = "\">" + NL + "      \t\t<sca:interface.java interface=\"";
  protected final String TEXT_10 = "\"/>" + NL + "      \t\t<frascati:binding.jbi " + NL + "      \t\t\tinterfaceName=\"";
  protected final String TEXT_11 = "\" " + NL + "      \t\t\tinterfaceNamespace=\"";
  protected final String TEXT_12 = "\" " + NL + "      \t\t\tserviceName=\"";
  protected final String TEXT_13 = "\" " + NL + "      \t\t\tserviceNamespace=\"";
  protected final String TEXT_14 = "\" " + NL + "      \t\t\tendpointName=\"";
  protected final String TEXT_15 = "\" " + NL + "      \t\t\twsdl=\"";
  protected final String TEXT_16 = "\"/>" + NL + "    \t</sca:reference>" + NL + "    \t" + NL + "    \t";
  protected final String TEXT_17 = NL + "  \t</sca:component>" + NL + "</sca:composite>";
  protected final String TEXT_18 = NL;

	 public String generate( Object argument )
  {
    final StringBuffer stringBuffer = new StringBuffer();
     ScaWizardBean bean = (ScaWizardBean) argument; 
    stringBuffer.append(TEXT_1);
    stringBuffer.append( bean.getCompositeName() );
    stringBuffer.append(TEXT_2);
    stringBuffer.append( bean.getCompositeTns() );
    stringBuffer.append(TEXT_3);
    stringBuffer.append( bean.getPackageName() );
    stringBuffer.append(TEXT_4);
    stringBuffer.append( bean.getServiceImplName() );
    stringBuffer.append(TEXT_5);
    stringBuffer.append( bean.getPackageName() );
    stringBuffer.append(TEXT_6);
    stringBuffer.append( bean.getServiceInterfaceName() );
    stringBuffer.append(TEXT_7);
     for( ScaWizardReferenceBean ref : bean.getReferences()) { 
    stringBuffer.append(TEXT_8);
    stringBuffer.append( ref.getReferenceName() );
    stringBuffer.append(TEXT_9);
    stringBuffer.append( ref.getInterfaceClassName() );
    stringBuffer.append(TEXT_10);
    stringBuffer.append( ref.getInterfaceName() );
    stringBuffer.append(TEXT_11);
    stringBuffer.append( ref.getInterfaceNamespace() );
    stringBuffer.append(TEXT_12);
    stringBuffer.append( ref.getServiceName() );
    stringBuffer.append(TEXT_13);
    stringBuffer.append( ref.getServiceNamespace() );
    stringBuffer.append(TEXT_14);
    stringBuffer.append( ref.getEndpointName() );
    stringBuffer.append(TEXT_15);
    stringBuffer.append( ref.getWsdlLocation() );
    stringBuffer.append(TEXT_16);
     } 
    stringBuffer.append(TEXT_17);
    stringBuffer.append(TEXT_18);
    return stringBuffer.toString();
  }
}