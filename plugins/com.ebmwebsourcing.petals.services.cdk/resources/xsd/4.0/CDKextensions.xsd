<?xml version="1.0" encoding="UTF-8"?>
<!-- Specific Petals CDK Types -->
<xs:schema xmlns="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://petals.ow2.org/components/extensions/version-4.0"
	xmlns:petalsCDK="http://petals.ow2.org/components/extensions/version-4.0"
	xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">

	<!-- Generic interceptor parameter type -->
	<xs:complexType name="Param">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="name" type="string" use="required"></xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	
		
	<!--  Component interceptor type -->
	<xs:complexType name="ComponentInterceptor">
		<xs:sequence>
			<xs:element name="param" type="petalsCDK:Param" maxOccurs="unbounded"
				minOccurs="0">
			</xs:element>
		</xs:sequence>
		<xs:attribute name="class" type="xs:string" use="required" />
		<xs:attribute name="name" type="xs:string" use="required" />
		<xs:attribute name="active" type="xs:boolean" use="required" />
	</xs:complexType>
	<xs:complexType name="ComponentInterceptors">
		<xs:sequence>
			<xs:element name="interceptor" type="petalsCDK:ComponentInterceptor"
				maxOccurs="unbounded" minOccurs="0">
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	
	<!--  Service Unit interceptor type -->
	<xs:complexType name="SUInterceptor">
		<xs:sequence>
			<xs:element name="param" type="petalsCDK:Param" maxOccurs="unbounded"
				minOccurs="0">
			</xs:element>
		</xs:sequence>
		<xs:attribute name="name" type="string" />
	</xs:complexType>
	<xs:complexType name="Send">
		<xs:sequence>
			<xs:element name="interceptor" type="petalsCDK:SUInterceptor"
				maxOccurs="unbounded" minOccurs="0">
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Accept">
		<xs:sequence>
			<xs:element name="interceptor" type="petalsCDK:SUInterceptor"
				maxOccurs="unbounded" minOccurs="0">
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SendResponse">
		<xs:sequence>
			<xs:element name="Interceptor" type="petalsCDK:SUInterceptor"
				maxOccurs="unbounded" minOccurs="0"></xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AcceptResponse">
		<xs:sequence>
			<xs:element name="Interceptor" type="petalsCDK:SUInterceptor"
				maxOccurs="unbounded" minOccurs="0"></xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SUInterceptors">
		<xs:sequence>
			<xs:element name="send" type="petalsCDK:Send" maxOccurs="1"
				minOccurs="0">
			</xs:element>
			<xs:element name="accept" type="petalsCDK:Accept"
				maxOccurs="1" minOccurs="0">
			</xs:element>
			<xs:element name="send-response" type="petalsCDK:SendResponse"
				maxOccurs="1" minOccurs="0">
			</xs:element>
			<xs:element name="accept-response" type="petalsCDK:AcceptResponse"
				maxOccurs="1" minOccurs="0">
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	
	<!-- Simple dynamic parameter types -->
	<!-- Settable types can be reset during the installation of the component -->
	<!-- Runtime types can be reset at any times during the component life -->
	<xs:complexType name="settablestring">
		<xs:simpleContent>
			<xs:extension base="xs:string">
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="runtimestring">
		<xs:simpleContent>
			<xs:extension base="xs:string">
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="settablelong">
		<xs:simpleContent>
			<xs:extension base="xs:long">
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="runtimelong">
		<xs:simpleContent>
			<xs:extension base="xs:long">
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="settableint">
		<xs:simpleContent>
			<xs:extension base="xs:int">
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="runtimeint">
		<xs:simpleContent>
			<xs:extension base="xs:int">
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="settableboolean">
		<xs:simpleContent>
			<xs:extension base="xs:boolean">
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="runtimeboolean">
		<xs:simpleContent>
			<xs:extension base="xs:boolean">
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="settableanyURI">
		<xs:simpleContent>
			<xs:extension base="xs:anyURI">
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<!-- Ignore status -->
	<xs:simpleType name="IgnoreStatus">
		<xs:restriction base="xs:token">
			<xs:enumeration value="DONE_AND_ERROR_IGNORED" />
			<xs:enumeration value="DONE_IGNORED" />
			<xs:enumeration value="ERROR_IGNORED" />
			<xs:enumeration value="NOTHING_IGNORED" />
		</xs:restriction>
	</xs:simpleType>

	<!-- Component Extensions -->
	<xs:element name="acceptor-pool-size" type="petalsCDK:runtimeint"
		default="5" />
	<xs:element name="processor-pool-size" type="petalsCDK:runtimeint"
		default="10" />
	<xs:element name="ignored-status" type="petalsCDK:IgnoreStatus"
		default="DONE_AND_ERROR_IGNORED" />
	<xs:element name="jbi-listener-class-name" type="xs:string" />
	<xs:element name="external-listener-class-name" type="xs:string" />
	<xs:element name="component-interceptors" type="petalsCDK:ComponentInterceptors" />
	<xs:element name="properties-file" type="petalsCDK:settableanyURI" />
	<xs:element name="performance-notifications" type="petalsCDK:runtimeboolean"
		default="false" />
	<xs:element name="performance-step" type="petalsCDK:runtimeint"
		default="1" />
	
	<!-- MEP : InOnly, InOut, RobustInOut, InOptionalOut -->
	<xs:simpleType name="MEPType">
		<xs:restriction base="xs:token">
			<xs:enumeration value="InOnly" />
			<xs:enumeration value="InOut" />
			<xs:enumeration value="RobustInOnly" />
			<xs:enumeration value="InOptionalOut" />
		</xs:restriction>
	</xs:simpleType>

	<!-- Services Unit Extensions -->
	<xs:element name="su-interceptors" type="petalsCDK:SUInterceptors" />

	<!-- Consumes Extensions -->
	<xs:element name="operation" type="xs:string">
		<xs:annotation>
			<xs:documentation>Operation to call. Can be a namespace, given as {namespaceURI}localPart</xs:documentation>
			<xs:documentation>NO HCI</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="timeout" type="xs:long">
		<xs:annotation>
			<xs:documentation>Timeout for synchronous calls. When reached, the service is considered as not responding</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="exchange-properties">
		<xs:annotation>
			<xs:documentation>Exchange Properties. Defines list of exchange properties to set on each processing request</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="exchange-property" type="petalsCDK:Param"
					minOccurs="1" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="mep" type="petalsCDK:MEPType" nillable="true">
		<xs:annotation>
			<xs:documentation>Message Exchange Pattern. Defines the interaction mode with the service provider</xs:documentation>
			<xs:documentation>NO HCI</xs:documentation>
		</xs:annotation>
	</xs:element>

	<!-- Provides Extensions -->
	<xs:element name="wsdl" type="xs:string" nillable="true">
		<xs:annotation>
			<xs:documentation>Service description. Local file or URI</xs:documentation>
		</xs:annotation>
	</xs:element>

    <!-- Petals Components specific types -->
    <!-- USed by Petals Eclipse plugin to generate special widgets -->
	<xs:simpleType name="File">
		<xs:restriction base="string"></xs:restriction>
	</xs:simpleType>
	
	<xs:element name="wsdl-imports-download" type="petalsCDK:settableboolean" default="false">
        <xs:annotation>
            <xs:documentation>If true, the external imports declared in the service WSDL will be downloaded, so they will be replaced by their content</xs:documentation>
        </xs:annotation>
    </xs:element>
</xs:schema>