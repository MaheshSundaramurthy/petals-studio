<?xml version="1.0" encoding="UTF-8"?>
<xs:schema 
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://petals.ow2.org/components/filetransfer/version-3"
	xmlns:petalsCDK="http://petals.ow2.org/components/extensions/version-5"
	xmlns:filetransfer="http://petals.ow2.org/components/filetransfer/version-3"
	elementFormDefault="qualified">
	
	<xs:import 
		namespace="http://petals.ow2.org/components/extensions/version-5"
		schemaLocation="CDKextensions.xsd" />
		
	<xs:element name="polling-period" type="xs:int" default="1000">
		<xs:annotation>
			<xs:documentation>Polling period in milliseconds</xs:documentation>
		</xs:annotation>
	</xs:element>
	
	<xs:element name="backup-directory" type="xs:string">
		<xs:annotation>
			<xs:documentation>Directory where read files are moved. ${env} environment variables are supported. Format like C:\ or /home</xs:documentation>
		</xs:annotation>
	</xs:element>
	
	<xs:element name="transfer-mode" type="filetransfer:TransferMode"
		default="attachment">
		<xs:annotation>
			<xs:documentation>Transfer the file into PEtALS as an XML payload or as an attachment</xs:documentation>
		</xs:annotation>
	</xs:element>
	
	<xs:element name="folder" type="xs:string">
		<xs:annotation>
			<xs:documentation>Working directory where files are written or retrieved. ${env} environment variables are supported. Format like C:\ or /home</xs:documentation>
		</xs:annotation>
	</xs:element>
	
	<xs:element name="filename" type="xs:string">
		<xs:annotation>
			<xs:documentation><b>CONSUME MODE:</b> pattern used filter files to read. <b>PROVIDE MODE:</b> name of the file written by PEtALS, appended with date-time (if not set, the file name is the operation name or 'content.xml').</xs:documentation>
		</xs:annotation>
	</xs:element>
	
	<xs:element name="base-message" type="xs:string">
		<xs:annotation>
			<xs:documentation>
				The skeleton of XML-message to send to the consumed service.
				It may contain <b>$content</b> or <b>$attachment</b>, or none of them. 
				This is the way the component should link the file with the returned message.
				
				<b>$content</b> will be replaced by the file content.
				<b>$attachment</b> will set the file in attachment. It will be replaced by 
				a xop:include element which references the attachment (MTOM-like).
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	
	<xs:simpleType name="TransferMode">
		<xs:restriction base="xs:string">
			<xs:enumeration value="content" />
			<xs:enumeration value="attachment" />
		</xs:restriction>
	</xs:simpleType>
</xs:schema>