package com.ebmwebsourcing.commons.jbi.internal.generated;

import com.ebmwebsourcing.commons.jbi.internal.provisional.beans.SaBean;
import com.ebmwebsourcing.commons.jbi.internal.provisional.beans.SuBeanForSa;

/****************************************************************************
 * 
 * Copyright (c) 2008-2011, EBM WebSourcing
 * 
 * This source code is available under agreement available at
 * http://www.petalslink.com/legal/licenses/petals-studio
 * 
 * You should have received a copy of the agreement along with this program.
 * If not, write to EBM WebSourcing (4, rue Amelie - 31200 Toulouse, France).
 * 
 *****************************************************************************/

/**
  * This class was generated by EMF JET. 
  * <b>DO NOT MODIFY IT!</b>
  * @author Vincent Zurczak - EBM WebSourcing 
  */
public class SaJbiXmlTemplate {

  protected static String nl;
  public static synchronized SaJbiXmlTemplate create(String lineSeparator)
  {
    nl = lineSeparator;
    SaJbiXmlTemplate result = new SaJbiXmlTemplate();
    nl = null;
    return result;
  }

  public final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" + NL + "<!-- Generated JBI descriptor for Petals. -->" + NL + "<jbi:jbi version=\"1.0\" " + NL + "\txmlns=\"http://java.sun.com/xml/ns/jbi\"" + NL + "\txmlns:jbi=\"http://java.sun.com/xml/ns/jbi\">" + NL + "" + NL + "\t<jbi:service-assembly>" + NL + "\t\t<jbi:identification>" + NL + "\t\t\t<jbi:name>";
  protected final String TEXT_2 = "</jbi:name>" + NL + "\t\t\t<jbi:description>";
  protected final String TEXT_3 = "</jbi:description>" + NL + "\t\t</jbi:identification>";
  protected final String TEXT_4 = NL + "\t\t\t\t" + NL + "\t\t<!-- ";
  protected final String TEXT_5 = " -->" + NL + "\t\t<jbi:service-unit>" + NL + "\t\t\t<jbi:identification>" + NL + "\t\t\t\t<jbi:name>";
  protected final String TEXT_6 = "</jbi:name>" + NL + "\t\t\t\t<jbi:description>";
  protected final String TEXT_7 = "</jbi:description>" + NL + "\t\t\t</jbi:identification>" + NL + "\t\t\t" + NL + "\t\t\t<jbi:target>" + NL + "\t\t\t\t<jbi:artifacts-zip>";
  protected final String TEXT_8 = "</jbi:artifacts-zip>" + NL + "\t\t\t\t<jbi:component-name>";
  protected final String TEXT_9 = "</jbi:component-name>" + NL + "\t\t\t</jbi:target>" + NL + "\t\t</jbi:service-unit>";
  protected final String TEXT_10 = NL + "\t</jbi:service-assembly>" + NL + "</jbi:jbi>";

	 public String generate( Object argument )
  {
    final StringBuffer stringBuffer = new StringBuffer();
    
/**
 * Copyright (c) 2008-2009, EBM WebSourcing
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 **/

     
	SaBean saBean = (SaBean) argument;

    stringBuffer.append(TEXT_1);
    stringBuffer.append( saBean.getSaName() );
    stringBuffer.append(TEXT_2);
    stringBuffer.append( saBean.getDescription() );
    stringBuffer.append(TEXT_3);
    		
	for( SuBeanForSa suBeanForSa : saBean.getSus()) { 
		
    stringBuffer.append(TEXT_4);
    stringBuffer.append( suBeanForSa.getSuName() );
    stringBuffer.append(TEXT_5);
    stringBuffer.append( suBeanForSa.getSuName() );
    stringBuffer.append(TEXT_6);
    stringBuffer.append( suBeanForSa.getDescription() );
    stringBuffer.append(TEXT_7);
    stringBuffer.append( suBeanForSa.getZipArtifact() );
    stringBuffer.append(TEXT_8);
    stringBuffer.append( suBeanForSa.getComponentName() );
    stringBuffer.append(TEXT_9);
     
	} 
		
    stringBuffer.append(TEXT_10);
    return stringBuffer.toString();
  }
}