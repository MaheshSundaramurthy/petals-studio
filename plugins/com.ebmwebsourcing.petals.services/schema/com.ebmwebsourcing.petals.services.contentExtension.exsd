<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="com.ebmwebsourcing.petals.tools.eclipse.su.main" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="com.ebmwebsourcing.petals.tools.eclipse.su.main" id="com.ebmwebsourcing.petals.services.contentExtension" name="Content extension for Petals services"/>
      </appinfo>
      <documentation>
         This extension allows you to register a type of Service Unit for Petals ESB. 
It then allows:
1. The creation of a dynamic wizard using XSD files specific to a Petals component.
2. Customizing the wizard and override the default behavior about the created elements.
3. The generation of Service Unit projects.
4. Extend the SU validation.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
         <documentation>
            Register a type of Service Unit for the Petals Enterprise Service Bus.
This extension allows you to create a dynamic wizard from the specific XSD files of the Service Unit
and then generate the Service Unit project and fill the important files (e.g. jbi.xml).
         </documentation>
      </annotation>
      <complexType>
         <choice>
            <element ref="WizardData"/>
         </choice>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="WizardData">
      <annotation>
         <appinfo>
            <meta.element labelAttribute="SuTypeName"/>
         </appinfo>
         <documentation>
            The WizardData is the root element of this extension.
It requires a name (which should be unique among all the SU registered) and a list of data about the supported versions.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="Version" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="SuType" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="ContributorDescription" type="string" use="required">
            <annotation>
               <documentation>
                  A bean that define various properties of a contributor.
Using a class instead of XML fields helps to guarantee the API aspect of this extension-point.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="com.ebmwebsourcing.petals.services.su.extensions.SuContributorDescription:"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="Version">
      <annotation>
         <appinfo>
            <meta.element labelAttribute="SuVersion"/>
         </appinfo>
         <documentation>
            A version defines the required field to be able to associate this Service Unit type with versioning data which are extremely useful for the wizard and the following project generation.
A version should be added in the plugin.xml file only if you plan to provide your own &quot;component-specific&quot; wizard page.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="WizardPage" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="SuVersion" type="string" use="required">
            <annotation>
               <documentation>
                  Each Service Unit type is versioned. 
This field describes the version of a Service Unit as a String value.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="CustomComponentPage" type="string">
            <annotation>
               <documentation>
                  A class that will be instantiated by the main plug-in as the Component page.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="com.ebmwebsourcing.petals.services.su.wizards.pages.AbstractSuPage:"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="CustomCdkPage" type="string">
            <annotation>
               <documentation>
                  A class that will be instantiated by the main plug-in as the CDK page.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="com.ebmwebsourcing.petals.services.su.wizards.pages.AbstractSuPage:"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="LastActionsPerformer" type="string">
            <annotation>
               <documentation>
                  The object called in last position to perform some extra-actions on the created project.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="com.ebmwebsourcing.petals.services.su.wizards.generation.LastActionsPerformer:"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="ProvideConfiguration" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="com.ebmwebsourcing.petals.services.su.extensions.WizardConfiguration:"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="ConsumeConfiguration" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="com.ebmwebsourcing.petals.services.su.extensions.WizardConfiguration:"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="WizardPage">
      <annotation>
         <appinfo>
            <meta.element labelAttribute="WizardPageClass"/>
         </appinfo>
         <documentation>
            A wizard page to insert in the wizard of this plug-in for the given version.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="WizardPageClass" type="string" use="required">
            <annotation>
               <documentation>
                  A wizard page that extends AbstractSuPage.
The client does not have to initialize the suType and suTypeVersion fields.
The client does not have to provide a page description and the page title.

&quot;Does not have&quot; does not means &quot;can&apos;t&quot;.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="com.ebmwebsourcing.petals.services.su.wizards.pages.AbstractSuPage:"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="WizardPagePosition" use="required">
            <annotation>
               <documentation>
                  The position of a page in a wizard:

* beforeJbiPage: after the version page but before the JBI page.
* beforeSpecificiPage: after the JBI page but before the component specific page.
* beforeCdkiPage: after the component specific page but before the CDK page.
* beforeJbiPage: after the CDK page.

Several pages can be registered with the same position. 
In this case, the order of registration in the plugin.xml file will be used to define the order.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="beforeJbiPage">
                  </enumeration>
                  <enumeration value="beforeSpecificPage">
                  </enumeration>
                  <enumeration value="beforeCdkPage">
                  </enumeration>
                  <enumeration value="afterCdkPage">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="WizardPageMode" use="required">
            <annotation>
               <documentation>
                  In which situation the given page should be used (provide, consume or both provide and consume).
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="Provide">
                  </enumeration>
                  <enumeration value="Consume">
                  </enumeration>
                  <enumeration value="Both">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
      </complexType>
   </element>



   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         For instance, this extension-point is not yet stable.
It is intended for Petals developers working closely with the author of this plug-in.
This extension-point might change from one version to another without any explaination from the plug-in provider.
      </documentation>
   </annotation>


   <annotation>
      <appinfo>
         <meta.section type="copyright"/>
      </appinfo>
      <documentation>
         Copyright (c) 2008-2011, EBM WebSourcing
      </documentation>
   </annotation>

</schema>
